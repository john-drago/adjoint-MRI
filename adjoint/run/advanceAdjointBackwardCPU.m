function lambda_nnm1 = advanceAdjointBackwardCPU( Rnn, lambda_nn, lambda_nnm1, gradx_g_nn )
% This function will integrate lambda backwards in time using the previous
% rotation matrices

lambda_nnm1( :, 1 ) = ...
    Rnn( :, 1 ) .* lambda_nn( :, 1 ) +...
    Rnn( :, 2 ) .* lambda_nn( :, 2 ) +...
    Rnn( :, 3 ) .* lambda_nn( :, 3 );
lambda_nnm1( :, 2 ) = ...
    Rnn( :, 4 ) .* lambda_nn( :, 1 ) +...
    Rnn( :, 5 ) .* lambda_nn( :, 2 ) +...
    Rnn( :, 6 ) .* lambda_nn( :, 3 );
lambda_nnm1( :, 3 ) = ...
    Rnn( :, 7 ) .* lambda_nn( :, 1 ) +...
    Rnn( :, 8 ) .* lambda_nn( :, 2 ) +...
    Rnn( :, 9 ) .* lambda_nn( :, 3 );

if ~isempty( gradx_g_nn )
    lambda_nnm1 = lambda_nnm1 + gradx_g_nn;
end
end